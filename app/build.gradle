apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs.kotlin'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'org.sonarqube' // added for sonar qube

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.android.template"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 6
        versionName "1.6"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_SERVER_BASE_URL", "\"https://newsapi.org/v2/\"")
        }
        debug {
            minifyEnabled false
            buildConfigField("String", "API_SERVER_BASE_URL", "\"https://newsapi.org/v2/\"")
        }
    }

    buildFeatures {
        dataBinding = true
        compose true
    }

    kapt {
        generateStubs = true
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 500)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    androidExtensions {
        experimental = true
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0-alpha08'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Template"
        property "sonar.projectKey", "Template"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "kotlin"
        property "sonar.sources", "src/main/java"
        property "sonar.java.sources", "src/main/java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.login", "admin"
        property "sonar.password", "mySonarQ24;"
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    implementation "androidx.core:core-ktx:$core_ktx_version"

    implementation "androidx.multidex:multidex:$multidex_version"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"

    // App dependencies
    implementation "com.google.code.gson:gson:$gson_version"

    //Fast Android Networking
    implementation "com.amitshekhar.android:android-networking:$fast_android_networking_version"
    implementation "com.amitshekhar.android:rx2-android-networking:$fast_android_networking_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLogging_version"

    /**
     * di Dagger 2
     */
    // Basic Dagger 2 (required)
    implementation "com.google.dagger:dagger:${dagger_version}"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"

    // dagger.android package (optional)
    implementation "com.google.dagger:dagger-android:$dagger3_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"

    // Support library support (optional)
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"

    /**
     * ROOM
     */
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // debug database
    debugImplementation "com.amitshekhar.android:debug-db:$debug_db_version"

    /**
     * VIEW MODEL AND LIVE DATE
     */
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    /**
     * Reactive Programing library
     */
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"

    /**
     * KeyStore
     */
    implementation "in.co.ophio:secure-preferences:$secure_preferences_version"

    /**
     * Pagination Library
     */
    implementation "androidx.paging:paging-runtime-ktx:$pagination_version"
    implementation "androidx.paging:paging-rxjava2-ktx:$pagination_version"

    /**
     * Picasso fot image
     */
    implementation "com.squareup.picasso:picasso:$picasso_version"

    /**
     * * SwipeRefreshLayout
     */
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefresh_layout_version"

//    image picker
    implementation "com.github.nguyenhoanglam:ImagePicker:$image_picker_version"
    //file picker
    implementation "com.nononsenseapps:filepicker:$filepicker_version"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    // Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    implementation "androidx.legacy:legacy-support-v4:$androidx_support_version"
    //expandableLayout
    implementation "net.cachapa.expandablelayout:expandablelayout:$expandable_layout_version"

    //sms retriever
    //  implementation 'com.google.android.gms:play-services-auth:19.0.0'
    //  implementation 'com.google.android.gms:play-services-auth-api-phone:17.5.0'
    //crop
    implementation "com.isseiaoki:simplecropview:$simplecrop_view_version"

    //secure code
    implementation "com.chaos.view:pinview:$pin_view_version"

    // firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies

    //  implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    //   implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-database'

    //data picker
    implementation "com.github.dewinjm:monthyear-picker:$month_year_picker"

//    implementation 'androidx.activity:activity-ktx:1.3.0-alpha07'
    implementation "com.microsoft.appcenter:appcenter-analytics:${app_center_sdk_version}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${app_center_sdk_version}"

    //SignalR Java client
//    implementation "com.microsoft.signalr:signalr:${signalR_version}"

    // Compose
    // Integration with activities
    implementation "androidx.activity:activity-compose:$compose_activity_version"
    // Compose Material Design
    implementation "androidx.compose.material:material:$compose_tooling_version"
    // Animations
    implementation "androidx.compose.animation:animation:$compose_tooling_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_tooling_version"
    // Tooling support loading Image from url
    implementation "io.coil-kt:coil-compose:$compose_loading_image_version"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$compose_lifecycle_viewmodel_version"
    // UI Tests Compose
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_tooling_version"

    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Security-crypto
    implementation "androidx.security:security-crypto:$security_crypto_version"
}